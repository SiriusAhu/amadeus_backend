[project]
name = "latest-backend"
version = "0.1.0"
description = "Amadeus AI Backend - Robot control with LLM integration"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "dotenv>=0.9.9",
    "fastapi>=0.119.1",
    "loguru>=0.7.3",
    "ollama>=0.6.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "requests>=2.32.5",
    "toml>=0.10.2",
    "uvicorn[standard]>=0.38.0",
    "websockets>=12.0",
]

[tool.ruff]
# 行长度
line-length = 88

# 目标 Python 版本
target-version = "py312"

# 排除的文件和目录
exclude = [".git", "__pycache__", ".venv", "venv", "dist", "build"]

[tool.ruff.lint]
# 启用的规则集
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit
    "SIM", # flake8-simplify
]

# 忽略的规则
ignore = [
    "E501",   # 行长度限制 (由 formatter 处理)
    "S101",   # assert 语句
    "S104",   # 绑定到所有接口 (开发环境需要)
    "E402",   # 模块级导入不在顶部 (测试文件需要)
    "RUF001", # 中文字符
    "RUF002", # 中文字符
    "RUF003", # 中文字符
]

[tool.ruff.lint.isort]
# 导入排序
known-first-party = ["llm_toolkit", "schemas"]
force-single-line = false
combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
# 测试文件允许使用 assert 和模块导入
"test_*.py" = ["S101", "E402"]
"**/test/*.py" = ["S101", "E402"]

[tool.ruff.format]
# 使用双引号
quote-style = "double"
# 缩进样式
indent-style = "space"
# 保留魔术逗号
skip-magic-trailing-comma = false
# 行结束符
line-ending = "auto"
